When would you want to use a remote repository rather than keeping all your work local?
  There may be several different occasions where you will need to keep a remote reposityory. 
  This need can occur when you work on different computers and you want to automatically 
  synchronize your project on all computers you work. Another ocassion can be when you 
  work on a project as a team. This way multiple persons can work on the same project 
  without anyl issues.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	There may be conflicting files on your local repository and your remote.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	A fork is a copy of another repository you make on your account on Github.com. A clone is a local copy of your remote repository. A branch is just a new tag or keypoint to a commit on your local or remote repository.

What is the benefit of having a copy of the last known state of the remote stored locally?
	This way we have a copy of both local and remote versions at the same time.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Collaborating without using git or github would be a lot harder, if not impossible. On small projects, it can be possible. But on larger projects tracking changes on the files will be impossible.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	In case I want to include a new feature to my code I can make a new branch an keep the new additions isolated from the master. After I finish the new feature and verify that everything works fine, I can merge this branch to the master.
